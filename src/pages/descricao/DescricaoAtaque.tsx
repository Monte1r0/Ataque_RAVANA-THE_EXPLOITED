import { motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';

function DescricaoAtaque() {
  const { ref, inView } = useInView({
    triggerOnce: true,
    threshold: 0.1,
  });

  return (
    <div className="bg-gradient-to-r from-gray-900 to-black min-h-screen flex flex-col items-center justify-center space-y-8 p-6">
      <div className="relative flex flex-col items-start justify-center">
        <motion.div
          ref={ref}
          className={`text-white p-6 rounded-lg w-full md:w-3/4 lg:w-1/2`}
          initial={{ opacity: 0, y: 20 }} // Início com opacidade 0 e deslocado para baixo
          animate={inView ? { opacity: 1, y: 0 } : { opacity: 0, y: 20 }} // Animação para entrada em vista
          exit={{ opacity: 0, y: 20 }} // Animação para saída
          transition={{ duration: 1, ease: [0.6, 0.05, 0.2, 0.95] }} // Duração da animação e easing suave
        >
          <h2 className="text-3xl md:text-4xl font-bold mb-6 text-red-700">Ataque DoS RAVANA - Camada 7 utilizando Colisão de Hash e Abuso de API</h2>
          <p className="text-base md:text-lg mb-6">
            O ataque RAVANA representa um marco na evolução das técnicas de Denial of Service (DoS), atacando de forma metódica e devastadora a camada 7, a camada de aplicação do modelo OSI. Ao empregar uma combinação sofisticada de colisões de hash e o abuso de APIs públicas, este ataque tem o potencial de transformar serviços web em experiências inoperáveis, subvertendo a confiança dos usuários e colocando em risco a integridade de sistemas críticos. A complexidade do RAVANA o torna um desafio formidável para as defesas tradicionais, exigindo uma compreensão profunda das interações entre cliente e servidor.
          </p>

          <motion.h3
            className="text-2xl md:text-2xl font-bold mb-4 text-red-700"
            initial={{ opacity: 0, x: -20 }} // Início com opacidade 0 e deslocado para a esquerda
            animate={inView ? { opacity: 1, x: 0 } : { opacity: 0, x: -20 }} // Animação para entrada em vista
            transition={{ duration: 1, ease: [0.6, 0.05, 0.2, 0.95] }} // Duração da animação e easing suave
          >
            Estrutura e Execução do Ataque
          </motion.h3>

          <h4 className="text-xl font-bold mb-2 text-red-700">1. Exploração de Colisão de Hash </h4>
          <p className="text-base md:text-lg mb-4">
            A primeira fase do ataque RAVANA envolve a exploração meticulosa das vulnerabilidades inerentes ao sistema de hash do servidor. As funções de hash, cruciais para o armazenamento e recuperação de dados, podem ser manipuladas quando um número excessivo de colisões é induzido. Esse processo ocorre quando diferentes conjuntos de dados resultam no mesmo valor de hash, levando a uma situação em que a eficiência do servidor é severamente comprometida.
          </p>

          <h5 className="text-base md:text-lg font-semibold mb-2 text-red-700">Método de Ataque:</h5>
          <p className="text-base md:text-lg mb-4">
            O atacante orquestra uma série de requisições HTTP, elaboradas para provocar colisões em massa. Esse artifício é executado ao inundar o servidor com dados que colidem em um valor de hash idêntico, forçando-o a investir uma quantidade desproporcional de tempo e recursos na resolução das colisões resultantes.
          </p>

          <h5 className="text-base md:text-lg font-semibold mb-2 text-red-700">Impacto no Servidor:</h5>
          <p className="text-base md:text-lg mb-4">
            Cada requisição que causa uma colisão exige que o servidor investigue múltiplos registros antes de conseguir processá-la corretamente. Embora isso possa ser administrável em um cenário de colisões limitadas, a escalabilidade do problema torna-se exponencial à medida que o número de colisões aumenta. O resultado é um consumo excessivo de CPU e memória, levando à degradação do serviço e, em última análise, à falha total do sistema.
          </p>

          <h4 className="text-xl font-bold mb-2 text-red-700">2. Abuso de API Pública</h4>
          <p className="text-base md:text-lg mb-4">
            O segundo componente do ataque RAVANA centra-se no abuso insidioso de APIs públicas, que frequentemente são projetadas sem as devidas salvaguardas de segurança, como limites de taxa (rate limiting) ou autenticação robusta. Essa exploração maximiza o impacto do ataque, amplificando a pressão sobre os sistemas alvo.
          </p>

          <h5 className="text-base md:text-lg font-semibold mb-2 text-red-700">Método de Ataque:</h5>
          <p className="text-base md:text-lg mb-4">
            O invasor utiliza scripts automatizados para enviar uma enxurrada de requisições aos endpoints de API, visando aqueles que não possuem proteção contra abusos. A escolha de APIs críticas, que demandam processamento intensivo ou acesso a grandes volumes de dados, eleva significativamente a carga no servidor.
          </p>

          <h5 className="text-base md:text-lg font-semibold mb-2 text-red-700">Impacto no Servidor:</h5>
          <p className="text-base md:text-lg mb-4">
            A ausência de controles adequados permite que as requisições abusivas sejam tratadas como se fossem legítimas, resultando em uma degradação drástica do desempenho do servidor. O efeito dominó não se limita a um único serviço, podendo provocar uma falha generalizada na infraestrutura conectada.
          </p>

          <h3 className="text-2xl font-bold mb-4 text-red-700">Etapas do Ataque RAVANA</h3>
          <p className="text-base md:text-lg mb-4">
            <strong>1. Reconhecimento:</strong> O atacante identifica alvos estratégicos, procurando servidores que utilizam mecanismos de hash vulneráveis e APIs expostas sem proteção adequada. A prioridade é dada a serviços com APIs públicas que carecem de autenticação e controles de taxa.
          </p>
          <p className="text-base md:text-lg mb-4">
            <strong>2. Preparação das Requisições de Colisão de Hash:</strong> Parâmetros são meticulosamente formulados para induzir colisões, sendo inseridos em requisições HTTP direcionadas a pontos de entrada do sistema, como formulários e URLs com parâmetros GET/POST.
          </p>
          <p className="text-base md:text-lg mb-4">
            <strong>3. Execução do Abuso de API:</strong> Simultaneamente, o atacante desata uma onda de requisições, utilizando proxies para ocultar sua identidade e dificultar a identificação do tráfego malicioso.
          </p>
          <p className="text-base md:text-lg mb-4">
            <strong>4. Amplificação do Ataque:</strong> O resultado é um sistema que começa a falhar sob a pressão, com lentidão crescente, falhas intermitentes e, eventualmente, a total inacessibilidade para usuários legítimos.
          </p>

          <h3 className="text-2xl font-bold mb-4 text-red-700">Mitigação</h3>
          <p className="text-base md:text-lg mb-4">
            O ataque RAVANA expõe as fraquezas tanto na manipulação de dados do servidor quanto nas falhas de configuração de APIs públicas. Para mitigar os impactos desse tipo de ameaça, recomenda-se a adoção das seguintes estratégias:
          </p>

          <ul className="list-disc list-inside mb-4">
            <li className="mb-2">
              <strong>Melhorar os Algoritmos de Hash:</strong> Adoção de algoritmos de hash resilientes a colisões, como SipHash, é essencial para dificultar o sucesso de ataques.
            </li>
            <li className="mb-2">
              <strong>Implementar Rate Limiting nas APIs:</strong> Limitar requisições por unidade de tempo por usuário ou IP é crucial para mitigar abusos em APIs.
            </li>
            <li className="mb-2">
              <strong>Autenticação Robusta:</strong> A exigência de autenticação para acesso a APIs públicas restringe o uso mal-intencionado, garantindo que apenas usuários legítimos tenham acesso.
            </li>
            <li className="mb-2">
              <strong>Monitoramento e Análise de Logs:</strong> A implementação de sistemas de monitoramento que detectem padrões de tráfego incomuns é vital para alertar sobre potenciais ataques e permitir uma resposta rápida.
            </li>
          </ul>
          <p className="text-base md:text-lg mb-4">
            
          </p>
        </motion.div>
      </div>
    </div>
  );
}

export default DescricaoAtaque;
